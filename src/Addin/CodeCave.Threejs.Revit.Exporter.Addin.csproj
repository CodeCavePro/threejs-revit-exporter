<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0-windows</TargetFramework>
    <OutputType>library</OutputType>
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>
    <Nullable>disable</Nullable>
    <ImplicitUsings>disable</ImplicitUsings>

    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>
    <Platforms>x64</Platforms>
    <PlatformTarget>x64</PlatformTarget>

    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>
    <!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
    e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
    <DefineConstants>REVIT$(RevitVersion);WINFORMS</DefineConstants>
    <PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>
    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>
    <!-- Override 'OutputPath' to Debug/Release + Revit version -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>..\bin\$(Configuration)\$(RevitVersion)</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
    <DebugType>full</DebugType>
    <OutputPath>..\..\bin\Debug\$(RevitVersion)</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <!-- Add-in manifest is processed via MSBuild -->
    <Content Include="AddinManifest.addin">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <!-- Don't use standard resource generator, since it doesn't allow
         one to use strings containing spaces -->
    <EmbeddedResource Include="Resources\**\*.*">
      <Generator />
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Exporter\CodeCave.Threejs.Revit.Exporter.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\ExportScene.rvt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\FamilyTemplate.rft">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\SpecifiLayersMap.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <PropertyGroup>
    <RootNamespace>CodeCave.Threejs.Revit.Exporter.Addin</RootNamespace>
    <AssemblyName>Threejs.Exporter.Addin</AssemblyName>
    <Authors>Yaroslav Zhmayev</Authors>
    <PackageId>codecave.threejs.exporter</PackageId>
    <Company>CODECAVE LLC</Company>
    <PackageProjectUrl>http://codecave.pro</PackageProjectUrl>
    <Product>Revit -&gt; Three.js</Product>
    <Version>0.1.0</Version>
    <NeutralLanguage>en</NeutralLanguage>
    <Copyright>Copyright Â© 2020 CODECAVE LLC - All Rights Reserved</Copyright>
  </PropertyGroup>

  <Target Name="CreateAddinManifest" AfterTargets="AfterBuild">
    <ItemGroup>
      <AddinManifest Include="$(OutputPath)\$(AssemblyName).addin" />
    </ItemGroup>
    <ReplaceFileText InputFilename="AddinManifest.addin" OutputFilename="@(AddinManifest)" MatchExpression="VendorDescription&gt;(.*?)&lt;" ReplacementText="VendorDescription&gt;$(Authors), $(Company), $(PackageProjectUrl)&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="FullClassName&gt;((.*?)\.)+" ReplacementText="FullClassName&gt;$(RootNamespace)." />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;Name&gt;(.*?)&lt;" ReplacementText="&lt;Name&gt;$(Product)&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
    <ReplaceFileText Condition="'$(Configuration)' == 'Release'" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(AssemblyName).dll&lt;" />
    <ReplaceFileText Condition="$(Configuration.Contains('Debug'))" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$([System.IO.Path]::GetFullPath('$(OutputPath)'))$(AssemblyName).dll&lt;" />
  </Target>

  <Target Name="CopyAddinsToAppData" AfterTargets="CreateAddinManifest" Condition="$(Configuration.Contains('Debug'))">
    <!-- Copy newly compiled add-in files to AppData folder (before starting the debugger) -->
    <Message Importance="high" Text="Copying addin file into Revit Addin folder" />
    <ItemGroup>
      <AddinFiles Include="$(OutputPath)\..\**\*.addin" />
    </ItemGroup>
    <Copy SourceFiles="@(AddinFiles)" DestinationFolder="$(AppData)\Autodesk\Revit\Addins\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
  </Target>

  <Target Name="CleanAddinsInAppData" AfterTargets="AfterClean">
    <!-- Delete previously deployed to AppData folder add-in files -->
    <ItemGroup>
      <AddinFiles Include="$(AppData)\Autodesk\Revit\Addins\**\$(AssemblyName).*" />
    </ItemGroup>
    <Delete Files="@(AddinFiles)" />
  </Target>
</Project>
